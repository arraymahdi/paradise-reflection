version: '3.8'

networks:
  paradise-reflection:
    driver: bridge

volumes:
  postgres:

services:
  postgres:
    container_name: postgres-sql-bsn
    image: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: paradise_reflection_db
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - paradise-reflection
    restart: unless-stopped

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - paradise-reflection

  kafka:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./Kafka:/bitnami/kafka
    networks:
      - paradise-reflection
    depends_on:
      - zookeeper

  mail-dev:
    container_name: mail-dev-sec
    image: maildev/maildev
    ports:
      - ${GET_MAILS_HOST_PORT}:1080
      - ${SEND_MAILS_HOST_PORT}:1025
    networks:
      - paradise-reflection

  spring-app:
    image: spring-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-sql-bsn:5432/paradise_reflection_db
      SPRING_DATASOURCE_USERNAME: username
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092 
    networks:
      - paradise-reflection
    depends_on:
      - postgres
      - kafka
      - mail-dev
